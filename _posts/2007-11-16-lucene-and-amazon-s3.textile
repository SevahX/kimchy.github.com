---
layout: post
title: Lucene and Amazon S3
---

<img src="http://www.kimchy.org/wp-content/uploads/2007/11/aws-s3.jpeg" alt="aws-s3" title="aws-s3" width="100%" class="aligncenter size-full wp-image-313" />

p. I spent some time trying to have the ability to store Lucene index on <a href="http://aws.amazon.com/s3">Amazon S3</a> service. Amazon S3 is a really cool idea, and having the ability to store Lucene index on top of it will provide a simple way to allow storing Lucene index in a distributed environment supporting HA. It will also make a lot of sense for applications deployed on <a href="http://aws.amazon.com/ec2">Amazon EC2</a>, since working with S3 from EC2 is free.



p. It was pretty simply to implement Lucene Directory interface on top of Amazon S3. A bucket is considered to be a Lucene index, and each file has one file object that holds its meta data, and 0 or more file objects holding portions of it (naturally, it is configurable). This, with Compass support for such storage, and Compass local cache support, should provide minor performance overhead when switching from local file system to S3.



p. Even before I embarked on this quick hacking session, the main thing I was concerned about was how to implement locking on top of S3. There is no formal locking API for it, but I heard somewhere that bucket creation is atomic. Assuming that it is, a very simple locking support can be done (creating a bucket and succeeding indicates a lock obtained, failure means it is locked already, deletion of a bucket releases the lock). Sadly, this is not the case and bucket creation is certainly not atomic. Funnily enough, it does not even fail when trying to create an already existing bucket.



p. So for now I shelved the implementation. It would be great if the good people at Amazon would allow for simple locking support. I understand that this is not simple to do in a distributed environment (hey, I work at <a href="http://www.gigaspaces.com">GigaSpaces</a>), but it must be there in some form, it will make S3 much a more attractive offer.

